<UI:ViewUserControl    x:Class="Pms.ManageWorkspaces.UI.Controls.WorkspaceTreeView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:UI="clr-namespace:Pms.Framework.UI;assembly=Pms.Framework.UI" 
                    xmlns:Controls="clr-namespace:Pms.ManageWorkspaces.UI.Controls"
                       xmlns:Behaviour="clr-namespace:Pms.ManageWorkspaces.UI.Controls.Behaviour"
                    xmlns:UC="clr-namespace:Pms.ManageWorkspaces.UI.Controls" 
                    xmlns:Domain="clr-namespace:Pms.ManageWorkspaces.Contract.Domain;assembly=Pms.ManageWorkspaces.Contract" 
                    xmlns:Converters="clr-namespace:Pms.ManageWorkspaces.UI.Controls.Converters" xmlns:ViewModel="clr-namespace:Pms.ManageWorkspaces.UI.Controls.ViewModel" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Loaded="ViewUserControl_Loaded">
    <UI:ViewUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/MobiguiderTreeViewTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ViewModel:WorkspaceTreeViewViewModel x:Key="vm"/>
            <Converters:TreeViewFilter x:Key="TreeViewFilter"/>
        </ResourceDictionary>
    </UI:ViewUserControl.Resources>

    <Grid>
        <Grid x:Name="LayoutRoot" DataContext="{StaticResource vm}" >
            <Grid.Resources>

                <HierarchicalDataTemplate x:Key="WorkspaceItemTemplate" ItemsSource="{Binding Path=Children,Converter={StaticResource TreeViewFilter}}" >
                    <Grid x:Name="GridKind" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" >
                                <!--<Image Name="imgIcon" Grid.Column="0" Grid.Row="0"   Source="{Binding Path=ItemImage}" Margin="0 0 5 0"  ></Image>-->
                                <Image Name="img"  Width="15" Height="15"
                                       Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, 
                                       Path=IsExpanded, 
                                       Converter={x:Static Converters:HeaderToImageConverter.Instance}}"       
                                       />
                                <TextBlock Text="{Binding Path=ItemTitle}" Grid.Column="1" Grid.Row="0" Margin="5 0 0 0" Foreground="#093E77"></TextBlock>
                            </StackPanel>
                            <StackPanel Margin="20 2 0 0">
                                <TextBlock x:Name="LoadingText" Text="Loading..." Visibility="Collapsed"  Foreground="#093E77"></TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate x:Key="ChildItemTemplate"
                                      ItemsSource="{Binding Path=Children,Converter={StaticResource TreeViewFilter}}"
                                      ItemTemplate="{StaticResource WorkspaceItemTemplate}" >

                    <Grid Margin="5" x:Name="GridLayout" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <StackPanel  Grid.Column="0" Grid.Row="0" Orientation="Horizontal" >

                            <!--<Image Name="img" Grid.Column="0" Grid.Row="0"  Source="{Binding Path=ItemImage}" Margin="0 0 0 0"></Image>-->
                            <Image Name="img"  Width="15" Height="15" 
                                       Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, 
                                       Path=IsExpanded, 
                                       Converter={x:Static Converters:HeaderToImageConverter.Instance}}"       
                                       />
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=ItemTitle}" Foreground="#191A1B" Margin="5 0 0 0" >


                            </TextBlock>
                            <!--<StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="NewTab" Header="Open in New Tab" Click="NewTabClick" />
                                </ContextMenu>
                            </StackPanel.ContextMenu>-->
                        </StackPanel>

                    </Grid>
                </HierarchicalDataTemplate>
            </Grid.Resources>

            <TreeView BorderThickness="0 0 0 0"  FontFamily="Verdana" Margin="10 5 5 5" AllowDrop="True" FontSize="10" x:Name="MyTreeView"
                                         Width="Auto" Height="Auto" x:FieldModifier="public"
                  ItemsSource="{Binding WorkspaceItems}"
                  ItemTemplate="{StaticResource ChildItemTemplate}"
                  TreeViewItem.Selected="MyTreeViewSelected"      
                  TreeViewItem.Expanded="MyTreeViewExpanded"
                  TreeViewItem.Collapsed="MyTreeViewExpanded" 
                  Behaviour:DragDropBehavior.EnableDrag="True"
                  Behaviour:DragDropBehavior.EnableDrop="True"
                  Behaviour:DragDropBehavior.ConfirmDrop="False" >


                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">

                        <!--<EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewDragOver"/>
                        <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewDrop"/>
                        <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewMouseMove"/>-->
                        <EventSetter Event="TreeViewItem.MouseDoubleClick" Handler="TestMouseLeftButtonDown"/>

                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="IsExpanded" Value="false" />
                        <Setter Property="IsSelected" Value="false" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" VerticalAlignment="Top" Panel.ZIndex="1"/>

                                        <Border x:Name="Bd" SnapsToDevicePixels="true"  Background="{DynamicResource RowSelectionHoverBackground }"   BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1" Panel.ZIndex="0" Margin="-6,0,0,0">
                                            <ContentPresenter x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" HorizontalAlignment="Stretch"/>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="5,0,0,0"/>
                                    </Grid>


                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsExpanded" Value="true"></Condition>
                                                <Condition Property="HasItems" Value="false"></Condition>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Width" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Height" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                        </MultiTrigger>

                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Bd" Property="Background" Value="#A5C8F5"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>

                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </Grid>
    </Grid>


</UI:ViewUserControl>
