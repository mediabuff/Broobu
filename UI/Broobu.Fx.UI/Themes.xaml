<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol">


    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordBoxStyle">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="DarkOliveGreen" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>


    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="LightSalmon" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TitleStyle">
        <Setter Property="FontSize" Value="40" />
        <Setter Property="FontWeight" Value="UltraLight" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="LightSeaGreen" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CurrentViewTitleStyle">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="LightCyan" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style TargetType="{x:Type TextBlock}" x:Key="TitleFeedbackStyle">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="DarkOliveGreen" />
        <Setter Property="Background" Value="WhiteSmoke" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyleLarge">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="verdana" />
        <Setter Property="Foreground" Value="WhiteSmoke" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
        <Setter Property="BorderBrush" Value="LightBlue" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderThickness" Value="10" />
        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="ExceptionBorderStyle">
        <Setter Property="BorderBrush" Value="DarkOrange" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="Padding" Value="10" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BannerBorderStyle">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="Padding" Value="5" />
    </Style>


    <!--<Style TargetType="{x:Type GroupBox}" x:Key="GroupboxStyle">
        <Setter Property="BorderBrush" Value="DarkOrange"/>
        <Setter Property="Background" Value="WhiteSmoke"></Setter>
        <Setter Property="Foreground" Value="DarkOrange"></Setter>
    </Style>-->

    <Style TargetType="{x:Type dxlc:LayoutItem}" x:Key="LayoutItemStyle">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="DarkBlue" />
        <Setter Property="LabelStyle" Value="{DynamicResource LayoutItemLabelStyle}" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="{x:Type dxlc:LayoutItemLabel}" x:Key="LayoutItemLabelStyle">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="DarkOrange" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="5" />
    </Style>


    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="4" Stroke="#FF638FD5" StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="DarkOliveGreen" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5,5,5,5" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5"
                            x:Name="border" BorderBrush="DarkOliveGreen">
                        <Border Background="WhiteSmoke" CornerRadius="5,5,5,5" x:Name="border1"
                                BorderBrush="DarkOliveGreen">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*" />
                                    <RowDefinition Height="0.5*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="5,5,0,0" />
                                <Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto"
                                        CornerRadius="0,0,5,5" Margin="1,0,-1,0"
                                        Background="{TemplateBinding BorderBrush}" />
                                <ContentPresenter VerticalAlignment="Center" Grid.RowSpan="2"
                                                  HorizontalAlignment="Center" x:Name="contentPresenter" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border1" Value="0.5" />
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>