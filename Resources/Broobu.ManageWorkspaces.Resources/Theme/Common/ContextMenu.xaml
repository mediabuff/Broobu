<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls.Primitives;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    >

	<!-- Geometries -->
	<Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerDownArrow}">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerUpArrow}">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerLeftArrow}">M 3,0 L 0,2.5 L 3,5 Z</Geometry>
	<Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerRightArrow}">M 0,0 L 3,2.5 L 0,5 Z</Geometry>
	<Geometry x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuItemRightArrow}">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	
	<!-- ContextMenuStyle -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=ContextMenuStyle}" TargetType="{x:Type ContextMenu}">
		<Style.Resources>
			<Style TargetType="ribbonControls:Menu">
				<Setter Property="ItemVariantSize" Value="Medium" />
			</Style>
		</Style.Resources>
		
        <Setter Property="HasDropShadow" Value="{x:Static ribbon:Ribbon.DropShadowsEnabled}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<AdornerDecorator SnapsToDevicePixels="True">
						<shared:DropShadowChrome Name="DropShadow" Color="Transparent" SnapsToDevicePixels="True">
							<Border BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuOuterBorderBrushKey}}" BorderThickness="1" 
								Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuBackgroundBrushKey}}" SnapsToDevicePixels="True">
								<Border BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuInnerBorderBrushKey}}" BorderThickness="1" SnapsToDevicePixels="True">
									<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewer}}">
										<ribbonControlsPrimitives:ScrollViewerItemsPresenter 
														KeyboardNavigation.TabNavigation="Cycle"
														KeyboardNavigation.DirectionalNavigation="Cycle"
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														Grid.IsSharedSizeScope="True"/>
									</ScrollViewer>
								</Border>
							</Border>
						</shared:DropShadowChrome>
					</AdornerDecorator>
					
					<ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="DropShadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="DropShadow" Property="Color" Value="#40000000" />
                        </Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
	<!-- ribbonControls:ContextMenu -->
	<Style x:Key="{x:Type ribbonControls:ContextMenu}" TargetType="{x:Type ribbonControls:ContextMenu}" 
		BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=ContextMenuStyle}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ribbonControls:ContextMenu}">
					<AdornerDecorator SnapsToDevicePixels="True">
						<DockPanel>
							<ContentPresenter x:Name="AdditionalContentPresenter" DockPanel.Dock="Top" Margin="0,0,0,10" Content="{TemplateBinding AdditionalContent}" />
							
							<shared:DropShadowChrome Name="DropShadow" Color="Transparent" SnapsToDevicePixels="True">
								<Border BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuOuterBorderBrushKey}}" BorderThickness="1" 
									Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuBackgroundBrushKey}}" SnapsToDevicePixels="True">
									<Border BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuInnerBorderBrushKey}}" BorderThickness="1" SnapsToDevicePixels="True">
										<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewer}}">
											<ribbonControlsPrimitives:ScrollViewerItemsPresenter 
															KeyboardNavigation.TabNavigation="Cycle"
															KeyboardNavigation.DirectionalNavigation="Cycle"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
															Grid.IsSharedSizeScope="True"/>
										</ScrollViewer>
									</Border>
								</Border>
							</shared:DropShadowChrome>
						</DockPanel>
					</AdornerDecorator>
					
					<ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="DropShadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="DropShadow" Property="Color" Value="#40000000" />
                        </Trigger>
						<Trigger Property="AdditionalContent" Value="{x:Null}">
							<Setter TargetName="AdditionalContentPresenter" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsAdditionalContentBelow" Value="True">
							<Setter TargetName="AdditionalContentPresenter" Property="DockPanel.Dock" Value="Bottom" />
							<Setter TargetName="AdditionalContentPresenter" Property="Margin" Value="0,10,0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- MenuScrollButton -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollButton}" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="MenuScrollButtonBorder" Margin="1" BorderBrush="Transparent" BorderThickness="1" Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuOverflowButtonBackgroundNormalBrushKey}}" CornerRadius="1">
						<ContentPresenter Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="MenuScrollButtonBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ApplicationMenuOuterBorderBrushKey}}"/>
							<Setter TargetName="MenuScrollButtonBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ContextMenuOverflowButtonBackgroundHoverBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>																
	</Style>
	
	<!-- MenuScrollingVisibilityConverter -->
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
	
	<!-- MenuScrollViewer -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewer}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
								Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton
									  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollButton}}"
									  Grid.Row="0"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineUpCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"
								  Data="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerUpArrow}}"/>
						</RepeatButton>
						<RepeatButton
									  Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollButton}}"
									  Grid.Row="2"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineDownCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"
								  Data="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=MenuScrollViewerDownArrow}}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
</ResourceDictionary>