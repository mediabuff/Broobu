<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonUI="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.UI;assembly=ActiproSoftware.Ribbon.Wpf351"
    >

	<!-- ribbonControls:ButtonGroup -->
	<Style x:Key="{x:Type ribbonControls:ButtonGroup }" TargetType="{x:Type ribbonControls:ButtonGroup}">
		<Setter Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ButtonGroupBackgroundBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.ButtonGroupBorderBrushKey}}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ribbonControls:ButtonGroup}">

					<Border x:Name="Background" CornerRadius="2" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
						<Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Border x:Name="InnerBorder" Margin="1" BorderThickness="1" BorderBrush="#40FFFFFF" CornerRadius="2" SnapsToDevicePixels="True" />
							<ItemsPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<Border x:Name="OuterBorder" BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" />
						</Grid>
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="HasBorder" Value="False">
							<Setter TargetName="Background" Property="Background" Value="Transparent" />
							<Setter TargetName="OuterBorder" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Style.Triggers>
			<Trigger Property="Context" Value="MiniToolBarItem">
				<Setter Property="HasBorder" Value="False" />
			</Trigger>
			<Trigger Property="Context" Value="StatusBarItem">
				<Setter Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.StatusBarButtonGroupBackgroundBrushKey}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.StatusBarButtonGroupBorderBrushKey}}" />
				<Setter Property="Margin" Value="0,1,0,1" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>