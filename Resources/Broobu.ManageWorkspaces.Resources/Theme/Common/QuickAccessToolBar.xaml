<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls.Primitives;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonInput="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Input;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonUI="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.UI;assembly=ActiproSoftware.Ribbon.Wpf351"
    >
	
	<!-- QATSeparatorStyle -->
	<Style x:Key="QATSeparatorStyle" TargetType="{x:Type Separator}">
		<Setter Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundBrushKey}}" />
		<Setter Property="BorderBrush" Value="#b0ffffff" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="Margin" Value="2,3,2,3" />
		<Setter Property="Width" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="True"
						BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- QATOverflowItemsControlStyle -->
	<Style x:Key="QATOverflowItemsControlStyle" TargetType="{x:Type ItemsControl}">
		<Setter Property="Focusable" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ItemsControl}">
					<Border Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.QatOverflowPopupBackgroundBrushKey}}" CornerRadius="1" SnapsToDevicePixels="True"
						BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.QatOverflowPopupBorderBrushKey}}">
						<Grid Margin="2" ClipToBounds="True">
							<StackPanel Height="{x:Static ribbonUI:RibbonMeasurements.RibbonControlSmallHeight}" Orientation="Horizontal">
								<ItemsPresenter />
								
								<ribbonControlsPrimitives:QuickAccessToolBarCustomizeButton x:Name="CustomizeButton" />
							</StackPanel>
						</Grid>
					</Border>
							
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ribbonControlsPrimitives:QuickAccessToolBar}}, Path=IsCustomizeButtonVisible}" Value="False">
							<Setter TargetName="CustomizeButton" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- QATAboveTemplate -->
	<ControlTemplate x:Key="QATAboveTemplate" TargetType="ribbonControlsPrimitives:QuickAccessToolBar">
		<StackPanel Height="{x:Static ribbonUI:RibbonMeasurements.RibbonControlSmallHeight}" Orientation="Horizontal">
			
			<Separator x:Name="beforeSeparator" Style="{StaticResource QATSeparatorStyle}" />			

			<ItemsControl x:Name="PART_VisibleItemsControl" Focusable="False"
				ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ribbonControlsPrimitives:IOverflowableItemsControl.VisibleItems)}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			
			<Separator x:Name="afterSeparator" Style="{StaticResource QATSeparatorStyle}" Visibility="Collapsed" />		
			
			<ribbonControlsPrimitives:QuickAccessToolBarCustomizeButton x:Name="CustomizeButton" />
			
			<ribbonControlsPrimitives:QuickAccessToolBarOverflowButton x:Name="OverflowButton" Visibility="Collapsed">						
				<ItemsControl x:Name="PART_OverflowItemsControl" Style="{StaticResource QATOverflowItemsControlStyle}"
					ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ribbonControlsPrimitives:IOverflowableItemsControl.OverflowedItems)}" />
			</ribbonControlsPrimitives:QuickAccessToolBarOverflowButton>
			
		</StackPanel>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsApplicationButtonVisible" Value="False">
				<Setter TargetName="beforeSeparator" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCustomizeButtonVisible" Value="False">
				<Setter TargetName="CustomizeButton" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCustomizeButtonVisible" Value="True">
				<Setter TargetName="afterSeparator" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsOverflowed" Value="True">
				<Setter TargetName="CustomizeButton" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="OverflowButton" Property="Visibility" Value="Visible" />
				<Setter TargetName="afterSeparator" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="HasItems" Value="False">
				<Setter TargetName="beforeSeparator" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="afterSeparator" Property="Visibility" Value="Collapsed" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>			

	<!-- QATBelowTemplate -->
	<ControlTemplate x:Key="QATBelowTemplate" TargetType="ribbonControlsPrimitives:QuickAccessToolBar">
		<Grid MinHeight="27" Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.QatBelowBackgroundBrushKey}}" SnapsToDevicePixels="True">
			<Border Margin="1,2,0,0" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.QatBelowInnerBorderBrushKey}}" BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True" />
			<Border Margin="0,1,1,1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.QatBelowOuterBorderBrushKey}}" BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True">
				<StackPanel Margin="1,1,0,0" Orientation="Horizontal">
					<ItemsControl x:Name="PART_VisibleItemsControl" Focusable="False"
						ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ribbonControlsPrimitives:IOverflowableItemsControl.VisibleItems)}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel Orientation="Horizontal"/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>
					
					<ribbonControlsPrimitives:QuickAccessToolBarCustomizeButton x:Name="CustomizeButton" Margin="2,0,0,0" />
					<ribbonControlsPrimitives:QuickAccessToolBarOverflowButton x:Name="OverflowButton" Margin="2,0,0,0" Visibility="Collapsed">						
						<ItemsControl x:Name="PART_OverflowItemsControl" Style="{StaticResource QATOverflowItemsControlStyle}"
							ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ribbonControlsPrimitives:IOverflowableItemsControl.OverflowedItems)}" />
					</ribbonControlsPrimitives:QuickAccessToolBarOverflowButton>
				</StackPanel>
			</Border>
		</Grid>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsCustomizeButtonVisible" Value="False">
				<Setter TargetName="CustomizeButton" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsOverflowed" Value="True">
				<Setter TargetName="CustomizeButton" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="OverflowButton" Property="Visibility" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- ribbonControlsPrimitives:QuickAccessToolBar -->
	<Style x:Key="{x:Type ribbonControlsPrimitives:QuickAccessToolBar}" TargetType="{x:Type ribbonControlsPrimitives:QuickAccessToolBar}">
		<Setter Property="Template" Value="{StaticResource QATBelowTemplate}" />
		
		<Style.Triggers>
			<Trigger Property="IsBelowRibbon" Value="False">
				<Setter Property="Template" Value="{StaticResource QATAboveTemplate}" />			
			</Trigger>			
		</Style.Triggers>
	</Style>

	<!-- QuickAccessToolBarCustomizationItemTemplate -->
	<DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=QuickAccessToolBarCustomizationItemTemplate}">
		<Grid MinHeight="18" SnapsToDevicePixels="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="18" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="18" />
			</Grid.ColumnDefinitions>
			<Image DockPanel.Dock="Left" Margin="1" Source="{Binding ImageSource}" Width="16" Height="16" SnapsToDevicePixels="True" />
			<TextBlock Grid.Column="1" Margin="7,1,7,1" Text="{Binding Label}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" />
			<Image x:Name="controlTypeImage" Grid.Column="2" DockPanel.Dock="Right" Margin="1" Width="16" Height="16" SnapsToDevicePixels="True" />
		</Grid>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding ControlType}" Value="ComboBox">
				<Setter TargetName="controlTypeImage" Property="Source" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/ControlTypes/ComboBox.png" />
			</DataTrigger>
			<DataTrigger Binding="{Binding ControlType}" Value="Group">
				<Setter TargetName="controlTypeImage" Property="Source" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/ControlTypes/Group.png" />
			</DataTrigger>
			<DataTrigger Binding="{Binding ControlType}" Value="PopupButton">
				<Setter TargetName="controlTypeImage" Property="Source" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/ControlTypes/PopupButton.png" />
			</DataTrigger>
			<DataTrigger Binding="{Binding ControlType}" Value="SplitButton">
				<Setter TargetName="controlTypeImage" Property="Source" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/ControlTypes/SplitButton.png" />
			</DataTrigger>
			<DataTrigger Binding="{Binding ControlType}" Value="TextBox">
				<Setter TargetName="controlTypeImage" Property="Source" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/ControlTypes/TextBox.png" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

</ResourceDictionary>