<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonUI="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.UI;assembly=ActiproSoftware.Ribbon.Wpf351"
    >
	
	<!-- SeparatorLargeTemplate (vertical lines) -->
	<ControlTemplate x:Key="SeparatorLargeTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<StackPanel Margin="3,5,3,5" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch">
			<Rectangle Width="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.SeparatorLightBrushKey}}" />
			<Rectangle Width="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.SeparatorDarkBrushKey}}" />
		</StackPanel>
	</ControlTemplate>

	<!-- SeparatorSmallTemplate (with image/label) -->
	<ControlTemplate x:Key="SeparatorSmallTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<StackPanel x:Name="Panel" Orientation="Horizontal" VerticalAlignment="Center">
			<Rectangle x:Name="Line1" Width="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.SeparatorDarkBrushKey}}" Visibility="Collapsed" />
			<Rectangle x:Name="Line2" Width="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.SeparatorLightBrushKey}}" Visibility="Collapsed" />
			<Image x:Name="Image" Margin="3,0,0,0" Width="16" Height="16" VerticalAlignment="Center" Stretch="Uniform"
				Source="{TemplateBinding ImageSourceSmall}" SnapsToDevicePixels="True" />
			<TextBlock x:Name="Label" Margin="3,0,3,0" VerticalAlignment="Center" 
				Text="{TemplateBinding Label}" SnapsToDevicePixels="True" />
		</StackPanel>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Image" Property="Opacity" Value="0.4"/>
				<Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundDisabledBrushKey}}"/>
			</Trigger>
			<Trigger Property="ImageSourceSmall" Value="{x:Null}">
				<Setter TargetName="Image" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Label" Value="{x:Null}" />
					<Condition Property="ImageSourceSmall" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Line1" Property="Visibility" Value="Visible" />
				<Setter TargetName="Line2" Property="Visibility" Value="Visible" />
				<Setter TargetName="Image" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="Label" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="Panel" Property="Margin" Value="3" />
				<Setter TargetName="Panel" Property="VerticalAlignment" Value="Stretch" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SeparatorMenuItemLargeTemplate (horizontal separator for large menu items) -->
	<ControlTemplate x:Key="SeparatorMenuItemLargeTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<Grid SnapsToDevicePixels="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{x:Static ribbonUI:RibbonMeasurements.MenuItemLargeIconColumnWidthGridLength}" SharedSizeGroup="MenuItemIconColumnGroup"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<StackPanel Grid.Column="1">
				<Rectangle Height="1" Margin="3,0,0,0" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
				<Rectangle Height="1" Margin="3,0,0,0" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
			</StackPanel>
		</Grid>
	</ControlTemplate>
	
	<!-- SeparatorMenuItemSmallTemplate (horizontal separator for small menu items) -->
	<ControlTemplate x:Key="SeparatorMenuItemSmallTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<Grid SnapsToDevicePixels="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{x:Static ribbonUI:RibbonMeasurements.MenuItemSmallIconColumnWidthGridLength}" SharedSizeGroup="MenuItemIconColumnGroup"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<Border BorderThickness="0,0,1,0" SnapsToDevicePixels="True" 
				BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" 
				Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuItemIconColumnBackgroundBrushKey}}">
				<Rectangle Margin="0,-1,0,-1" Width="1" HorizontalAlignment="Right" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" SnapsToDevicePixels="True" />
			</Border>
			
			<StackPanel Grid.Column="1" Margin="3,0,0,0">
				<Rectangle Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
				<Rectangle Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
			</StackPanel>
		</Grid>
	</ControlTemplate>
		
	<!-- SeparatorLabeledMenuItemTemplate (label heading for menu items) -->
	<ControlTemplate x:Key="SeparatorLabeledMenuItemTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<Grid Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuLabeledSeparatorBackgroundBrushKey}}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Rectangle x:Name="UpperSeparator1" Grid.Row="0" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
			<Rectangle x:Name="UpperSeparator2" Grid.Row="1" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
			<TextBlock x:Name="Label" Grid.Row="2" Margin="7,3,7,5" FontWeight="Bold" Text="{TemplateBinding Label}" VerticalAlignment="Center" />
			<Rectangle Grid.Row="3" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
			<Rectangle Grid.Row="4" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
		</Grid>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundDisabledBrushKey}}"/>
			</Trigger>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsFirstItem}" Value="True">
				<Setter Property="MinHeight" Value="25" />
				<Setter TargetName="UpperSeparator1" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="UpperSeparator2" Property="Visibility" Value="Collapsed" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- SeparatorPopupLargeTemplate (vertical lines) -->
	<ControlTemplate x:Key="SeparatorPopupLargeTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch">
			<Rectangle Width="1" Fill="{TemplateBinding Foreground}" />
			<Rectangle Width="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
		</StackPanel>
	</ControlTemplate>

	<!-- SeparatorPopupSmallTemplate (horizontal lines) -->
	<ControlTemplate x:Key="SeparatorPopupSmallTemplate" TargetType="{x:Type ribbonControls:Separator}">
		<StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Top">
			<Rectangle Height="1" Fill="{TemplateBinding Foreground}" />
			<Rectangle Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" />
		</StackPanel>
	</ControlTemplate>

	<!-- ribbonControls:Separator -->
	<Style x:Key="{x:Type ribbonControls:Separator}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundBrushKey}}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template" Value="{StaticResource SeparatorSmallTemplate}" />
		
		<Style.Triggers>
			<Trigger Property="VariantSize" Value="Large">
				<Setter Property="Template" Value="{StaticResource SeparatorLargeTemplate}" />
			</Trigger>
			<Trigger Property="Context" Value="MenuItem">
				<Setter Property="Template" Value="{StaticResource SeparatorMenuItemSmallTemplate}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Context" Value="MenuItem" />
					<Condition Property="VariantSize" Value="Large" />
				</MultiTrigger.Conditions>
				<Setter Property="Template" Value="{StaticResource SeparatorMenuItemLargeTemplate}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Context" Value="MenuItem" />
					<Condition Property="HasLabel" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuItemForegroundBrushKey}}"/>
				<Setter Property="MinHeight" Value="27" />
				<Setter Property="Template" Value="{StaticResource SeparatorLabeledMenuItemTemplate}" />
			</MultiTrigger>
			<Trigger Property="Context" Value="None">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
				<Setter Property="Template" Value="{StaticResource SeparatorPopupSmallTemplate}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Context" Value="None" />
					<Condition Property="VariantSize" Value="Large" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
				<Setter Property="Template" Value="{StaticResource SeparatorPopupLargeTemplate}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	
	<!-- SeparatorLargeStyle (Used as workaround for VS 2008 Style.Triggers bug) -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=SeparatorLargeStyle}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Template" Value="{StaticResource SeparatorLargeTemplate}" />
	</Style>
	
	<!-- SeparatorMenuItemSmallStyle (Used as workaround for VS 2008 Style.Triggers bug) -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=SeparatorMenuItemSmallStyle}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Template" Value="{StaticResource SeparatorMenuItemSmallTemplate}" />
	</Style>
	
	<!-- SeparatorMenuItemLargeStyle (Used as workaround for VS 2008 Style.Triggers bug) -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=SeparatorMenuItemLargeStyle}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Template" Value="{StaticResource SeparatorMenuItemLargeTemplate}" />
	</Style>
	
	<!-- SeparatorPopupSmallStyle (Used as workaround for VS 2008 Style.Triggers bug) -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=SeparatorPopupSmallStyle}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
		<Setter Property="Template" Value="{StaticResource SeparatorPopupSmallTemplate}" />
	</Style>
	
	<!-- SeparatorPopupLargeStyle (Used as workaround for VS 2008 Style.Triggers bug) -->
	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=SeparatorPopupLargeStyle}" TargetType="{x:Type ribbonControls:Separator}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" />
		<Setter Property="Template" Value="{StaticResource SeparatorPopupLargeTemplate}" />
	</Style>
	
</ResourceDictionary>