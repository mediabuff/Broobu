<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	xmlns:productsRibbon="clr-namespace:ActiproSoftware.Products.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonInput="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Input;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonUI="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.UI;assembly=ActiproSoftware.Ribbon.Wpf351"
	>
	<ResourceDictionary.MergedDictionaries>
		
		<ResourceDictionary Source="Menu.xaml" />
		
	</ResourceDictionary.MergedDictionaries>

	<!-- RecentDocumentPinButtonStyle -->
	<Style x:Key="RecentDocumentPinButtonStyle" TargetType="ribbonControls:Button">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Command" Value="{x:Static ribbonInput:RibbonCommands.TogglePin}" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ribbonControls:Button">
					<Border x:Name="OuterBorder" BorderThickness="1" BorderBrush="Transparent" Background="{TemplateBinding Background}">
						<Border x:Name="InnerBorder" BorderThickness="1" BorderBrush="Transparent">
							<Image Margin="{TemplateBinding Padding}" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
								Source="{TemplateBinding ImageSourceSmall}" SnapsToDevicePixels="True" />
						</Border>						
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLargeBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLargeBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLargeBackgroundPressedBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderPressedBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderPressedBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>								
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- RecentDocumentButtonStyle -->
	<Style x:Key="RecentDocumentButtonStyle" TargetType="{x:Type ribbonControls:Button}">
		<Setter Property="Command" Value="ApplicationCommands.Open" />
		<Setter Property="CommandParameter" Value="{Binding}" />
		<Setter Property="Context" Value="MenuItem" />
		<Setter Property="ribbonUI:ScreenTipService.CanDeriveKeyboardShortcutFromCommand" Value="False" />
		<Setter Property="Template">
			<Setter.Value>

				<ControlTemplate TargetType="{x:Type ribbonControls:Button}">
					<ControlTemplate.Resources>
						<shared:RecentDocumentIndexToAccessTextConverter x:Key="RecentDocumentIndexToAccessTextConverter" />
					</ControlTemplate.Resources>
					
					<Grid SnapsToDevicePixels="True">
						<Rectangle x:Name="OuterBorder" Fill="Transparent" RadiusX="1" RadiusY="1" SnapsToDevicePixels="True" />
						<Rectangle x:Name="InnerBorder" Margin="1" RadiusX="1" RadiusY="1" SnapsToDevicePixels="True" />
					
						<Grid x:Name="PART_Button" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" SharedSizeGroup="AccessText" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							
							<TextBlock Margin="5,0,5,0" VerticalAlignment="Center" SnapsToDevicePixels="True" TextDecorations="{x:Static TextDecorations.Underline}"
								Text="{Binding Path=(shared:RecentDocumentManager.Index), Converter={StaticResource RecentDocumentIndexToAccessTextConverter}}" />
							<TextBlock x:Name="Label" Grid.Column="1" Margin="4,0,4,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
								Text="{TemplateBinding Label}" SnapsToDevicePixels="True" />
							<ribbonControls:Button x:Name="PinButton" Grid.Column="2" Style="{StaticResource RecentDocumentPinButtonStyle}" 
								Padding="4,1,4,1" VerticalAlignment="Center" StaysOpenOnClick="True" 
								ribbonUI:ScreenTipService.ScreenTipHeader="{productsRibbon:SRExtension UIRecentDocumentPinButtonPinToolTip}"
								ImageSourceSmall="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/Images/PinOut16.png"
								/>
						</Grid>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Label" Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundDisabledBrushKey}}"/>
						</Trigger>
						
						<DataTrigger Binding="{Binding IsPinnedRecentDocument}" Value="True">
							<Setter TargetName="PinButton" Property="ribbonUI:ScreenTipService.ScreenTipHeader" Value="{productsRibbon:SRExtension UIRecentDocumentPinButtonUnpinToolTip}"/>
							<Setter TargetName="PinButton" Property="ImageSourceSmall" Value="pack://application:,,,/ActiproSoftware.Ribbon.Wpf351;component/Products/Ribbon/Images/PinIn16.png"/>
						</DataTrigger>
						
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsKeyboardFocused" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="OuterBorder" Property="Fill" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundPressedBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderPressedBrushKey}}"/>
							<Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderPressedBrushKey}}"/>
						</MultiTrigger>
						
						<Trigger SourceName="PinButton" Property="IsMouseOver" Value="True">
							<Setter TargetName="OuterBorder" Property="Fill" Value="Transparent" />
							<Setter TargetName="OuterBorder" Property="Stroke" Value="Transparent"/>
							<Setter TargetName="InnerBorder" Property="Stroke" Value="Transparent"/>
						</Trigger>
						<Trigger SourceName="PinButton" Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="Fill" Value="Transparent" />
							<Setter TargetName="OuterBorder" Property="Stroke" Value="Transparent"/>
							<Setter TargetName="InnerBorder" Property="Stroke" Value="Transparent"/>
						</Trigger>
					</ControlTemplate.Triggers>					
				</ControlTemplate>
				
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ribbonControls:RecentDocumentMenu -->
	<Style x:Key="{x:Type ribbonControls:RecentDocumentMenu}" TargetType="{x:Type ribbonControls:RecentDocumentMenu}"
		BasedOn="{StaticResource {x:Type ribbonControls:Menu}}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="300" />
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate DataType="shared:IDocument">
					<ribbonControls:Button 
							Label="{Binding Name}" ScreenTipHeader="{Binding Location}" ScreenTipDescription=""
							/>
				</DataTemplate>
			</Setter.Value>			
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ribbonControls:RecentDocumentMenu">
					<ControlTemplate.Resources>
						<Style TargetType="ribbonControls:Button" BasedOn="{StaticResource RecentDocumentButtonStyle}" />
					</ControlTemplate.Resources>
					
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<StackPanel>
							<StackPanel x:Name="LabelPanel">
								<TextBlock Margin="7,5,7,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Foreground="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuItemForegroundBrushKey}}" Text="{TemplateBinding Label}" />
								<Rectangle Margin="0,4,0,0" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorDarkBrushKey}}" SnapsToDevicePixels="True" />
								<Rectangle Margin="0,0,0,4" Height="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.MenuSeparatorLightBrushKey}}" SnapsToDevicePixels="True" />
							</StackPanel>
							<ItemsPresenter Grid.IsSharedSizeScope="True" />							
						</StackPanel>
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Label" Value="{x:Null}">
							<Setter TargetName="LabelPanel" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>			
		</Setter>
	</Style>
			
</ResourceDictionary>