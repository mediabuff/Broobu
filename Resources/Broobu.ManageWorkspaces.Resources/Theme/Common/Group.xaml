<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonControlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls.Primitives;assembly=ActiproSoftware.Ribbon.Wpf351"
	xmlns:ribbonThemes="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Themes;assembly=ActiproSoftware.Ribbon.Wpf351"
    xmlns:ribbonUI="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.UI;assembly=ActiproSoftware.Ribbon.Wpf351"
    >

	<!-- DialogLauncherButtonStyle -->
	<Style x:Key="DialogLauncherButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="MinHeight" Value="{x:Static ribbonUI:RibbonMeasurements.GroupDialogLauncherButtonHeight}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Width" Value="{x:Static ribbonUI:RibbonMeasurements.GroupDialogLauncherButtonWidth}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,2,0" SnapsToDevicePixels="True">
						<Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,2,0" SnapsToDevicePixels="True">
							<Canvas x:Name="MaximizeGlyph" Margin="1,0,0,0" Width="8" Height="8" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Path StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" SnapsToDevicePixels="True" 
									Stroke="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelDialogLauncherGlyph1BrushKey}}" 
									Data="M 0.5,5.5 L 0.5,0.5 L 5.5,0.5" />
								<Path StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" SnapsToDevicePixels="True" 
									Stroke="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelDialogLauncherGlyph2BrushKey}}" 
									Data="M 1.5,5.5 L 1.5,1.5 L 5.5,1.5 M 4.5,3.5 L 6,5 L 4,7.5 L 7.5,7.5 L 7.5,3.5 L 6,5" />
								<Path StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" SnapsToDevicePixels="True"
									Stroke="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelDialogLauncherGlyph1BrushKey}}" 
									Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelDialogLauncherGlyph1BrushKey}}" 
									Data="M 3.5,3.5 L 5,5 L 3.5,6.5 L 6.5,6.5 L 6.5,3.5 L 5,5" />
							</Canvas>
						</Border>
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundHoverBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundPressedBrushKey}}" />
							<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderPressedBrushKey}}" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderPressedBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- GroupExpandedTemplate -->
	<ControlTemplate x:Key="GroupExpandedTemplate" TargetType="{x:Type ribbonControls:Group}">
		<ControlTemplate.Resources>
			<shared:CoalesceConverter x:Key="CoalesceConverter" />
		</ControlTemplate.Resources>
	
		<!-- Expanded Variant (duplicated in collapsed popup below) -->
		<Grid Margin="1" SnapsToDevicePixels="True">
			<Grid Margin="1" SnapsToDevicePixels="True">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="1" />
					<RowDefinition Height="Auto" MinHeight="{x:Static ribbonUI:RibbonMeasurements.GroupLabelHeight}" />
				</Grid.RowDefinitions>
				
				<Rectangle x:Name="BackgroundHover" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedBackgroundHoverBrushKey}}" Opacity="0" SnapsToDevicePixels="True" />
				
				<ItemsControl x:Name="ItemsControl" Margin="3,1,3,0" MinHeight="{x:Static ribbonUI:RibbonMeasurements.RibbonControlLargeHeight}" 
					HorizontalAlignment="Center" VerticalAlignment="Stretch" 
					ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Items}" 
					ItemTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplate}" 
					ItemTemplateSelector="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplateSelector}" 
					Focusable="False" SnapsToDevicePixels="True">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>											
				</ItemsControl>
				
				<Grid Grid.Row="2"
					Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelBackgroundNormalBrushKey}}" SnapsToDevicePixels="True">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"	/>
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>

					<Rectangle x:Name="LabelBackgroundHover" Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelBackgroundHoverBrushKey}}" Opacity="0" SnapsToDevicePixels="True" />
					
					<shared:PixelSnapper x:Name="LabelPixelSnapper" HorizontalRoundMode="None" VerticalRoundMode="None">
						<ribbonControlsPrimitives:ZeroWidthLabel x:Name="Label" Margin="2,-1,2,1" ClipToBounds="True" Focusable="False" 
							VerticalAlignment="Center" HorizontalContentAlignment="Center"  
							Label="{TemplateBinding Label}" 
							Foreground="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelForegroundBrushKey}}" />
					</shared:PixelSnapper>
					
					<Button x:Name="PART_DialogLauncherButton" Grid.Column="1" Margin="0,0,1,1"
						Command="{TemplateBinding Command}" 
						CommandParameter="{TemplateBinding CommandParameter}" 
						CommandTarget="{TemplateBinding CommandTarget}" 
						ribbonUI:KeyTipService.KeyTipAccessText="{TemplateBinding DialogLauncherKeyTipAccessText}"
						ribbonUI:ScreenTipService.ScreenTipDescription="{TemplateBinding ScreenTipDescription}" 
						ribbonUI:ScreenTipService.ScreenTipFooter="{TemplateBinding ScreenTipFooter}" 
						ribbonUI:ScreenTipService.ScreenTipHelpUri="{TemplateBinding ScreenTipHelpUri}" 
						ribbonUI:ScreenTipService.ScreenTipImageSource="{TemplateBinding ScreenTipImageSource}" 
						Style="{StaticResource DialogLauncherButtonStyle}" SnapsToDevicePixels="True">
						<ribbonUI:ScreenTipService.ScreenTipHeader>
							<MultiBinding Converter="{StaticResource CoalesceConverter}">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ScreenTipHeader" />
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Label" />
							</MultiBinding>
						</ribbonUI:ScreenTipService.ScreenTipHeader>
					</Button>
				</Grid>
			</Grid>
			<Border x:Name="InnerBorderNormal" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedInnerBorderBrushKey}}" CornerRadius="2" Opacity="0.4" SnapsToDevicePixels="True">
				<Border.RenderTransform>
					<TranslateTransform X="1" Y="1" />
				</Border.RenderTransform>
			</Border>
			<Border x:Name="OuterBorderNormal" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedOuterBorderNormalBrushKey}}" CornerRadius="2" SnapsToDevicePixels="True" />
			<Border x:Name="OuterBorderHover" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedOuterBorderHoverBrushKey}}" CornerRadius="2" Opacity="0" SnapsToDevicePixels="True" />
			<Border x:Name="InnerBorderHover" Margin="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedInnerBorderBrushKey}}" CornerRadius="2" Opacity="0" SnapsToDevicePixels="True" />
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="IsLabelCollapsible" Value="False">
				<Setter TargetName="LabelPixelSnapper" Property="HorizontalRoundMode" Value="Ceiling" />
				<Setter TargetName="Label" Property="MinWidth" Value="{Binding ElementName=Label, Path=IdealWidth}" />
			</Trigger>
			<Trigger Property="Command" Value="{x:Null}">
				<Setter TargetName="PART_DialogLauncherButton" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="OuterBorderNormal" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="OuterBorderHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="InnerBorderNormal" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="InnerBorderHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="LabelBackgroundHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="OuterBorderNormal" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="OuterBorderHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="InnerBorderNormal" Storyboard.TargetProperty="Opacity" To="0.4" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="InnerBorderHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetName="LabelBackgroundHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<!-- GroupCollapsedTemplate -->
	<ControlTemplate x:Key="GroupCollapsedTemplate" TargetType="{x:Type ribbonControls:Group}">
		<ControlTemplate.Resources>
			<shared:CoalesceConverter x:Key="CoalesceConverter" />
		</ControlTemplate.Resources>
	
		<Grid x:Name="OuterGrid" Margin="1" Background="Transparent" SnapsToDevicePixels="True">
			
			<Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" MinWidth="30" MinHeight="16"
					StaysOpen="True" VerticalOffset="-2"
					IsOpen="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
				<AdornerDecorator SnapsToDevicePixels="True">
					<shared:DropShadowChrome Name="DropShadow" Color="Transparent">
						
						<!-- Expanded Variant (duplicated in expanded template above) -->
						<Grid>
							<Border Margin="1" Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.TabContentBackgroundBrushKey}}" CornerRadius="2" SnapsToDevicePixels="True" />

							<Grid Margin="1" SnapsToDevicePixels="True">
								<Grid Margin="1" SnapsToDevicePixels="True">
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="1" />
										<RowDefinition Height="Auto" MinHeight="{x:Static ribbonUI:RibbonMeasurements.GroupLabelHeight}" />
									</Grid.RowDefinitions>
									
									<Rectangle x:Name="BackgroundHover" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedBackgroundHoverBrushKey}}" Opacity="0" SnapsToDevicePixels="True" />
									
									<ItemsControl Margin="3,1,3,0" MinHeight="{x:Static ribbonUI:RibbonMeasurements.RibbonControlLargeHeight}" 
										HorizontalAlignment="Center" VerticalAlignment="Stretch" 
										ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Items}" 
										ItemTemplate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplate}" 
										ItemTemplateSelector="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ItemTemplateSelector}" 
										Focusable="True" IsTabStop="False" SnapsToDevicePixels="True" FocusVisualStyle="{x:Null}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Horizontal"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>											
									</ItemsControl>
									
									<Grid Grid.Row="2"
										Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelBackgroundNormalBrushKey}}" SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"	/>
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<Rectangle x:Name="LabelBackgroundHover" Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelBackgroundHoverBrushKey}}" Opacity="0" SnapsToDevicePixels="True" />
											
										<ribbonControlsPrimitives:ZeroWidthLabel x:Name="Label" Margin="2,0,2,1" ClipToBounds="True" Focusable="False" 
											VerticalAlignment="Center" HorizontalContentAlignment="Center"  
											Label="{TemplateBinding Label}" MinWidth="{Binding RelativeSource={RelativeSource Self}, Path=IdealWidth}" 
											Foreground="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupLabelForegroundBrushKey}}" />
										
										<Button x:Name="PART_DialogLauncherButton" Grid.Column="1" Margin="0,0,1,1"
											Command="{TemplateBinding Command}" 
											CommandParameter="{TemplateBinding CommandParameter}" 
											CommandTarget="{TemplateBinding CommandTarget}" 
											ribbonUI:KeyTipService.KeyTipAccessText="{TemplateBinding DialogLauncherKeyTipAccessText}"
											ribbonUI:ScreenTipService.ScreenTipDescription="{TemplateBinding ScreenTipDescription}" 
											ribbonUI:ScreenTipService.ScreenTipFooter="{TemplateBinding ScreenTipFooter}" 											
											ribbonUI:ScreenTipService.ScreenTipHelpUri="{TemplateBinding ScreenTipHelpUri}" 
											ribbonUI:ScreenTipService.ScreenTipImageSource="{TemplateBinding ScreenTipImageSource}" 
											Style="{StaticResource DialogLauncherButtonStyle}" SnapsToDevicePixels="True">
											<ribbonUI:ScreenTipService.ScreenTipHeader>
												<MultiBinding Converter="{StaticResource CoalesceConverter}">
													<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ScreenTipHeader" />
													<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Label" />
												</MultiBinding>
											</ribbonUI:ScreenTipService.ScreenTipHeader>
										</Button>
									</Grid>
								</Grid>
								<Border x:Name="InnerBorderNormal" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedInnerBorderBrushKey}}" CornerRadius="2" Opacity="0.4" SnapsToDevicePixels="True">
									<Border.RenderTransform>
										<TranslateTransform X="1" Y="1" />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="OuterBorderNormal" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedOuterBorderNormalBrushKey}}" CornerRadius="2" SnapsToDevicePixels="True" />
								<Border x:Name="OuterBorderHover" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedOuterBorderHoverBrushKey}}" CornerRadius="2" Opacity="0" SnapsToDevicePixels="True" />
								<Border x:Name="InnerBorderHover" Margin="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupExpandedInnerBorderBrushKey}}" CornerRadius="2" Opacity="0" SnapsToDevicePixels="True" />
							</Grid>
							
							<Grid.Triggers>
								<EventTrigger RoutedEvent="UIElement.MouseEnter">
									<EventTrigger.Actions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="OuterBorderNormal" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="OuterBorderHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="InnerBorderNormal" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="InnerBorderHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="LabelBackgroundHover" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger.Actions>
								</EventTrigger>
								<EventTrigger RoutedEvent="UIElement.MouseLeave">
									<EventTrigger.Actions>
										<BeginStoryboard>
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="OuterBorderNormal" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="OuterBorderHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="InnerBorderNormal" Storyboard.TargetProperty="Opacity" To="0.4" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="InnerBorderHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="BackgroundHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
												<DoubleAnimation Storyboard.TargetName="LabelBackgroundHover" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger.Actions>
								</EventTrigger>
							</Grid.Triggers>
						</Grid>
						
					</shared:DropShadowChrome>
				</AdornerDecorator>
			</Popup>
			
			<Grid x:Name="CollapsedButton">
				<Rectangle x:Name="CollapsedBackgroundPressed" Margin="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedBackgroundPressedBrushKey}}" Visibility="Hidden" SnapsToDevicePixels="True" />
				
				<Grid Background="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedBackgroundNormalBrushKey}}">
					<Grid.RowDefinitions>
						<RowDefinition Height="{x:Static ribbonUI:RibbonMeasurements.ButtonBaseLargeIconHeightGridLength}" />
						<RowDefinition Height="*" />
						<RowDefinition Height="{x:Static ribbonUI:RibbonMeasurements.GroupLabelHeightGridLength}" />
					</Grid.RowDefinitions>
					
					<Rectangle x:Name="CollapsedBackgroundHover" Grid.RowSpan="2" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedBackgroundHoverBrushKey}}" Visibility="Hidden" SnapsToDevicePixels="True" />
					
					<Border Margin="3,5,3,0" Width="30" Height="31" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedImageBorderBrushKey}}" BorderThickness="1" CornerRadius="3" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="7" />
							</Grid.RowDefinitions>
							
							<Image x:Name="Image" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" 
								Source="{TemplateBinding ImageSourceSmall}" SnapsToDevicePixels="True" />
							
							<Rectangle Grid.Row="1" Fill="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedImageLabelBackgroundBrushKey}}" SnapsToDevicePixels="True" />	
						</Grid>
					</Border>
					
					<ribbonControlsPrimitives:TwoLineLabel Grid.Row="1" Margin="3,2,3,0" 										
						Label="{TemplateBinding Label}" 
						HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="False" />
				</Grid>
				
				<Border x:Name="CollapsedOuterBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedOuterBorderNormalBrushKey}}" CornerRadius="2" SnapsToDevicePixels="True" />
				<Border x:Name="CollapsedInnerBorder" Margin="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedInnerBorderNormalBrushKey}}" CornerRadius="2" SnapsToDevicePixels="True" />
			</Grid>
			
			<Border x:Name="QATButtonOuterBrush" Visibility="Collapsed" Background="#40FFFFFF" BorderThickness="1" CornerRadius="1"
				BorderBrush="#80808080">
				<Border x:Name="QATButtonInnerBrush" Margin="1">
					<Image x:Name="Image2" Margin="1" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" 
						Source="{TemplateBinding ImageSourceSmall}" SnapsToDevicePixels="True" />
				</Border>
			</Border>			
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
				<Setter TargetName="DropShadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="DropShadow" Property="Color" Value="#40000000" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="Fade" />
			</Trigger>
			
			<Trigger Property="Context" Value="QuickAccessToolBarItem">
				<Setter TargetName="OuterGrid" Property="Margin" Value="0" />
				<Setter TargetName="CollapsedButton" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="QATButtonOuterBrush" Property="Visibility" Value="Visible" />				
			</Trigger>
			<Trigger Property="Command" Value="{x:Null}">
				<Setter TargetName="PART_DialogLauncherButton" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="ImageSourceSmall" Value="{x:Null}">
				<Setter TargetName="Image" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageSourceLarge}"/>
				<Setter TargetName="Image2" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageSourceLarge}"/>
			</Trigger>

			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="IsPopupOpen" Value="False" />
				</MultiTrigger.Conditions>
				<Setter TargetName="CollapsedOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedOuterBorderHoverBrushKey}}" />
				<Setter TargetName="CollapsedInnerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedInnerBorderHoverBrushKey}}" />
				<Setter TargetName="CollapsedBackgroundHover" Property="Visibility" Value="Visible" />
				<Setter TargetName="QATButtonOuterBrush" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundHoverBrushKey}}" />
				<Setter TargetName="QATButtonOuterBrush" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderHoverBrushKey}}"/>
				<Setter TargetName="QATButtonInnerBrush" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderHoverBrushKey}}"/>
			</MultiTrigger>
			<Trigger Property="IsPopupOpen" Value="True">
				<Setter TargetName="CollapsedOuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.GroupCollapsedOuterBorderPressedBrushKey}}" />
				<Setter TargetName="CollapsedInnerBorder" Property="Visibility" Value="Hidden" />
				<Setter TargetName="CollapsedBackgroundPressed" Property="Visibility" Value="Visible" />
				<Setter TargetName="QATButtonOuterBrush" Property="Background" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlSmallBackgroundPopupOpenBrushKey}}" />
				<Setter TargetName="QATButtonOuterBrush" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlOuterBorderPopupOpenBrushKey}}"/>
				<Setter TargetName="QATButtonInnerBrush" Property="BorderBrush" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlInnerBorderPopupOpenBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ribbonControls:Group -->
	<Style x:Key="{x:Type ribbonControls:Group}" TargetType="{x:Type ribbonControls:Group}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundBrushKey}}" />
		<Setter Property="MinHeight" Value="{x:Static ribbonUI:RibbonMeasurements.GroupHeight}" />
		<Setter Property="MinWidth" Value="{x:Static ribbonUI:RibbonMeasurements.GroupMinWidth}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template" Value="{StaticResource GroupExpandedTemplate}" />
		
		<Style.Triggers>
			<Trigger Property="Context" Value="QuickAccessToolBarItem">
				<Setter Property="MinHeight" Value="{x:Static ribbonUI:RibbonMeasurements.RibbonControlSmallHeight}" />
			</Trigger>
			<Trigger Property="VariantSize" Value="Collapsed">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static ribbonThemes:RibbonCommonDictionary.RibbonControlLabelForegroundBrushKey}}" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Template" Value="{StaticResource GroupCollapsedTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>